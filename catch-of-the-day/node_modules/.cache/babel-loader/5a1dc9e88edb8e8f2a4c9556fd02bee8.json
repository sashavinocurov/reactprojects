{"ast":null,"code":"import _classCallCheck from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{getFunName}from\"../helpers\";var StorePicker=/*#__PURE__*/function(_React$Component){_inherits(StorePicker,_React$Component);var _super=_createSuper(StorePicker);function StorePicker(){var _this;_classCallCheck(this,StorePicker);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.myInput=React.createRef();_this.goToStore=function(event){// 1. Stop the form from submitting\nevent.preventDefault();// 2. Get the text from that input\nvar storeName=_this.myInput.current.value;// 3. Change the page to /store/whatever-they-entered\n_this.props.history.push(\"/store/\".concat(storeName));};return _this;}_createClass(StorePicker,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{className:\"store-selector\",onSubmit:this.goToStore},/*#__PURE__*/React.createElement(\"h2\",null,\" Please Enter A Store \"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:this.myInput,required:true,placeholder:\"Store Name\",defaultValue:getFunName()}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\" Visit Store \")));}}]);return StorePicker;}(React.Component);export default StorePicker;","map":{"version":3,"sources":["/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/StorePicker.js"],"names":["React","getFunName","StorePicker","myInput","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","Component"],"mappings":"4uBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,UAAT,KAA2B,YAA3B,C,GAGMC,CAAAA,W,2VAYFC,O,CAAUH,KAAK,CAACI,SAAN,E,OAEVC,S,CAAY,SAAAC,KAAK,CAAI,CACjB;AACAA,KAAK,CAACC,cAAN,GACA;AACA,GAAMC,CAAAA,SAAS,CAAG,MAAKL,OAAL,CAAaM,OAAb,CAAqBC,KAAvC,CACA;AACA,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,kBAAkCL,SAAlC,GACH,C,8EACS,CACN,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,4BAAM,SAAS,CAAC,gBAAhB,CAAiC,QAAQ,CAAE,KAAKH,SAAhD,eAEI,uDAFJ,cAGI,6BACI,IAAI,CAAC,MADT,CAEI,GAAG,CAAE,KAAKF,OAFd,CAGI,QAAQ,KAHZ,CAII,WAAW,CAAC,YAJhB,CAKI,YAAY,CAAGF,UAAU,EAL7B,EAHJ,cASI,8BAAQ,IAAI,CAAE,QAAd,kBATJ,CADJ,CADJ,CAeH,C,yBAtCqBD,KAAK,CAACc,S,EA0ChC,cAAeZ,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getFunName } from \"../helpers\";\n\n\nclass StorePicker extends React.Component {\n    // constructor() {\n    //     super();\n    //     this.goToStore = this.goToStore.bind(this);\n    //     //over-wright the method and will attach the binding to it.\n    //     //constructor could be messy if there is alot of pages.\n    // }\n\n    static propTypes = {\n        history: PropTypes.object.isRequired\n    }\n\n    myInput = React.createRef();\n\n    goToStore = event => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. Get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3. Change the page to /store/whatever-they-entered\n        this.props.history.push(`/store/${storeName}`);\n    }\n    render () {\n        return (\n            <React.Fragment>\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\n                    { /* comment should be inside return element */}\n                    <h2> Please Enter A Store </h2>\n                    <input\n                        type=\"text\" \n                        ref={this.myInput}\n                        required\n                        placeholder=\"Store Name\" \n                        defaultValue= {getFunName()}/>\n                    <button type =\"submit\"> Visit Store </button>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default StorePicker;\n"]},"metadata":{},"sourceType":"module"}