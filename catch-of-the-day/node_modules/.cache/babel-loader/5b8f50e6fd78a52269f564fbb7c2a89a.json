{"ast":null,"code":"import _objectSpread from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Header from'./Header';import Order from'./Order';import Inventory from'./Inventory';import sampleFishes from'../sample-fishes';import Fish from'./Fish';import base from\"../base\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={fishes:{},order:{}};_this.addFish=function(fish){// 1. Take a copy of the existing state. if you take state directly it will mutate \nvar fishes=_objectSpread({},_this.state.fishes);// 2. Add our new fish to that fishes variable\nfishes[\"fish\".concat(Date.now())]=fish;// 3. Set the new fishes object to state\n_this.setState({fishes});};_this.loadSampleFishes=function(){_this.setState({fishes:sampleFishes});};_this.updateFish=function(key,updateFish){// 1. take a copy of the current state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. update that state\nfishes[key]=updateFish;// 3. Set that to state\n_this.setState({fishes});};_this.deleteFish=function(key){// 1. take a copy of state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. update the state\nfishes[key]=null;// 3. update state\n_this.setState({fishes});};_this.addToOrder=function(key){// 1. take a copy of state\nvar order=_objectSpread({},_this.state.order);// 2. Either add to the order, or update the number in our order\norder[key]=order[key]+1||1;// 3. Call setState to update our state object\n_this.setState({order});};_this.removeFromOrder=function(key){// 1. take a copy of state\nvar order=_objectSpread({},_this.state.order);// 2. remove that item from order\ndelete order[key];// 3. Call setState to update our state object\n_this.setState({order});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.match.params;// first reinstate local storage\nvar localStorageRef=localStorage.getItem(params.storeId);if(localStorageRef){this.setState({order:JSON.parse(localStorageRef)});}this.ref=base.syncState(\"\".concat(params.storeId,\"/fishes/\"),{context:this,state:'fishes'});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){localStorage.setItem(this.props.match.params.storeId,JSON.stringify(this.state.order));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"catch-of-the-day\"},/*#__PURE__*/React.createElement(\"div\",{className:\"menu\"},/*#__PURE__*/React.createElement(Header,{tagline:\"Fresh Seafood Market\"}),/*#__PURE__*/React.createElement(\"ul\",{className:\"fishes\"},Object.keys(this.state.fishes).map(function(key){return/*#__PURE__*/React.createElement(Fish,{key:key,index:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder});}))),/*#__PURE__*/React.createElement(Order,{fishes:this.state.fishes,order:this.state.order,removeFromOrder:this.removeFromOrder}),/*#__PURE__*/React.createElement(Inventory,{addFish:this.addFish,updateFish:this.updateFish,deleteFish:this.deleteFish,loadSampleFishes:this.loadSampleFishes,fishes:this.state.fishes,storeId:this.props.match.params.storeId})));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","loadSampleFishes","updateFish","key","deleteFish","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from \"../base\";\n\n\nclass App extends React.Component {\n\n    state= {\n        fishes: {},\n        order: {},\n    };\n\n    static propTypes ={\n        match: PropTypes.object.isRequired\n    };\n\ncomponentDidMount(){\n    const { params } = this.props.match; \n    // first reinstate local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if(localStorageRef) {\n        this.setState({ order: JSON.parse(localStorageRef) })\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes/`, {\n        context: this, \n        state: 'fishes'\n    });\n}\n\ncomponentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n}\n\ncomponentWillUnmount() {\n    base.removeBinding(this.ref);\n}\n\n\n    addFish = fish => {\n        // 1. Take a copy of the existing state. if you take state directly it will mutate \n        const fishes = {...this.state.fishes};\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] =fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    updateFish = (key, updateFish) => {\n        // 1. take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. update that state\n        fishes[key] = updateFish;\n        // 3. Set that to state\n        this.setState({fishes});\n    };\n\n    deleteFish = key => {\n        // 1. take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. update the state\n        fishes[key] = null;\n        // 3. update state\n        this.setState({ fishes });\n    };\n\n    addToOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that item from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    }\n    render() {\n        return(\n            <React.Fragment>\n                <div className=\"catch-of-the-day\">\n                    <div className=\"menu\">\n                        <Header tagline=\"Fresh Seafood Market\" />\n                        <ul className=\"fishes\">\n                            {Object.keys(this.state.fishes).map(key => \n                                <Fish \n                                    key={key} \n                                    index={key}\n                                    details={this.state.fishes[key]} \n                                    addToOrder={this.addToOrder} />)}\n                        </ul>\n                    </div>\n                    <Order \n                        fishes={this.state.fishes} \n                        order={this.state.order}\n                        removeFromOrder={this.removeFromOrder}\n                    />\n                    {/* {...this.state} passing every single object in the state into a component */} \n                    <Inventory \n                        addFish={this.addFish} \n                        updateFish={this.updateFish}\n                        deleteFish={this.deleteFish}\n                        loadSampleFishes={this.loadSampleFishes} \n                        fishes={this.state.fishes}\n                        storeId={this.props.match.params.storeId}\n                    />\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}