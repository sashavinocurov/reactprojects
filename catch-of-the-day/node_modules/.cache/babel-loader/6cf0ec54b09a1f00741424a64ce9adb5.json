{"ast":null,"code":"import _classCallCheck from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createSuper from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available'; // make sure fish is loaded before we continue\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          classNames: \"order\",\n          key: key,\n          timeout: {\n            enter: 500,\n            exit: 500\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }\n        }, \" Sorry \", fish ? fish.name : 'fish', \" is no longer available \"));\n      }\n\n      ;\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"order\",\n        key: key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"span\",\n        className: \"count\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"count\",\n        key: count,\n        timeout: {},\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }\n      }, count))), \"lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"\\xD7\"))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, \"Total:\", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, formatPrice(total)))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\n\nclass Order extends React.Component {\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish &&fish.status === 'available';\n        // make sure fish is loaded before we continue\n        if(!fish) return null;\n        if(!isAvailable){\n            return (\n                <CSSTransition classNames=\"order\" key={key} timeout={{ enter:500, exit:500 }}>\n                    <li key={key}> Sorry {fish ? fish.name : 'fish'} is no longer available </li>\n                </CSSTransition>\n            );\n        };\n        return (\n            <CSSTransition classNames=\"order\" key={key} timeout={{ enter:500, exit:500 }}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ }}>\n                                <span>{count}</span> \n                            </CSSTransition>\n                        </TransitionGroup>\n                    lbs {fish.name}\n                    {formatPrice(count * fish.price)}\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) =>{\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable){\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return(\n            <React.Fragment>\n                <div className=\"order-wrap\">\n                    <h2>Order</h2>\n                    <TransitionGroup component=\"ul\" className=\"order\">\n                        {orderIds.map(this.renderOrder)}\n                    </TransitionGroup>\n                    <div className=\"total\">\n                        Total:\n                        <strong>{formatPrice(total)}</strong>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n  }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}