{"ast":null,"code":"import _classCallCheck from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    _classCallCheck(this, Order);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this.props.fishes[key];\n        var count = _this.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Total:\", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, formatPrice(total)))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nOrder.propTypes = renderOrder = function renderOrder(key) {\n  var fish = Order.props.fishes[key];\n  var count = Order.props.order[key];\n  var isAvailable = fish && fish.status === 'available';\n  var transitionOptions = {\n    classNames: \"order\",\n    key,\n    timeout: {\n      enter: 500,\n      exit: 500\n    }\n  }; // make sure fish is loaded before we continue\n\n  if (!fish) return null;\n\n  if (!isAvailable) {\n    return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n      __self: Order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      __self: Order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, \" Sorry \", fish ? fish.name : 'fish', \" is no longer available \"));\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    key: key,\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: \"span\",\n    className: \"count\",\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CSSTransition, {\n    classNames: \"count\",\n    key: count,\n    timeout: {\n      enter: 500,\n      exit: 500\n    },\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, count))), \"lbs \", fish.name, formatPrice(count * fish.price)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return Order.props.removeFromOrder(key);\n    },\n    __self: Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"\\xD7\")));\n};\n\nexport default Order;","map":{"version":3,"sources":["/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/Order.js"],"names":["React","PropTypes","formatPrice","TransitionGroup","CSSTransition","Order","orderIds","Object","keys","props","order","total","reduce","prevTotal","key","fish","fishes","count","isAvailable","status","price","map","renderOrder","Component","propTypes","transitionOptions","classNames","timeout","enter","exit","name","removeFromOrder"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\n\nclass Order extends React.Component {\n    static propTypes =\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish &&fish.status === 'available';\n        const transitionOptions ={\n            classNames: \"order\", \n            key,\n            timeout:{ enter:500, exit:500 }\n        };\n        // make sure fish is loaded before we continue\n        if(!fish) return null;\n        if(!isAvailable){\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}> Sorry {fish ? fish.name : 'fish'} is no longer available </li>\n                </CSSTransition>\n            );\n        };\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ enter: 500, exit: 500 }}>\n                                <span>{count}</span> \n                            </CSSTransition>\n                        </TransitionGroup>\n                    lbs {fish.name}\n                    {formatPrice(count * fish.price)}\n                    </span>\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </li>\n            </CSSTransition>\n        );\n    }\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) =>{\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable){\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return(\n            <React.Fragment>\n                <div className=\"order-wrap\">\n                    <h2>Order</h2>\n                    <TransitionGroup component=\"ul\" className=\"order\">\n                        {orderIds.map(this.renderOrder)}\n                    </TransitionGroup>\n                    <div className=\"total\">\n                        Total:\n                        <strong>{formatPrice(total)}</strong>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n  }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}