{"ast":null,"code":"import _objectSpread from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from \"../base\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // 1. Take a copy of the existing state. if you take state directly it will mutate \n      var fishes = _objectSpread({}, _this.state.fishes); // 2. Add our new fish to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // 3. Set the new fishes object to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.updateFish = function (key, updateFish) {\n      // 1. take a copy of the current state\n      var fishes = _objectSpread({}, _this.state.fishes); // 2. update that state\n\n\n      fishes[key] = updateFish; // 3. Set that to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      // 1. take a copy of state\n      var fishes = _objectSpread({}, _this.state.fishes); // 2. update the state\n\n\n      fishes[key] = null; // 3. update state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. Either add to the order, or update the number in our order\n\n\n      order[key] = order[key] + 1 || 1; // 3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. remove that item from order\n\n\n      delete order[key]; // 3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params; // first reinstate local storage\n\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes/\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"fishes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        removeFromOrder: this.removeFromOrder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Inventory, {\n        addFish: this.addFish,\n        updateFish: this.updateFish,\n        deleteFish: this.deleteFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nApp.propTypes = {};\nexport default App;","map":{"version":3,"sources":["/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/App.js"],"names":["React","PropTypes","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","loadSampleFishes","updateFish","key","deleteFish","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from \"../base\";\n\n\nclass App extends React.Component {\n\n    state= {\n        fishes: {},\n        order: {},\n    };\n\n    static propTypes ={\n        \n    }\n\ncomponentDidMount(){\n    const { params } = this.props.match; \n    // first reinstate local storage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if(localStorageRef) {\n        this.setState({ order: JSON.parse(localStorageRef) })\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes/`, {\n        context: this, \n        state: 'fishes'\n    });\n}\n\ncomponentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n}\n\ncomponentWillUnmount() {\n    base.removeBinding(this.ref);\n}\n\n\n    addFish = fish => {\n        // 1. Take a copy of the existing state. if you take state directly it will mutate \n        const fishes = {...this.state.fishes};\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] =fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    updateFish = (key, updateFish) => {\n        // 1. take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. update that state\n        fishes[key] = updateFish;\n        // 3. Set that to state\n        this.setState({fishes});\n    };\n\n    deleteFish = key => {\n        // 1. take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. update the state\n        fishes[key] = null;\n        // 3. update state\n        this.setState({ fishes });\n    };\n\n    addToOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that item from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    }\n    render() {\n        return(\n            <React.Fragment>\n                <div className=\"catch-of-the-day\">\n                    <div className=\"menu\">\n                        <Header tagline=\"Fresh Seafood Market\" />\n                        <ul className=\"fishes\">\n                            {Object.keys(this.state.fishes).map(key => \n                                <Fish \n                                    key={key} \n                                    index={key}\n                                    details={this.state.fishes[key]} \n                                    addToOrder={this.addToOrder} />)}\n                        </ul>\n                    </div>\n                    <Order \n                        fishes={this.state.fishes} \n                        order={this.state.order}\n                        removeFromOrder={this.removeFromOrder}\n                    />\n                    {/* {...this.state} passing every single object in the state into a component */} \n                    <Inventory \n                        addFish={this.addFish} \n                        updateFish={this.updateFish}\n                        deleteFish={this.deleteFish}\n                        loadSampleFishes={this.loadSampleFishes} \n                        fishes={this.state.fishes}\n                    />\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}