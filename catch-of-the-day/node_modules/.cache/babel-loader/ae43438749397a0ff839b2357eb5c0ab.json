{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import firebase from'firebase';import AddFishForm from'./AddFishForm';import EditFishForm from'./EditFishForm';import Login from'./Login';import base,{firebaseApp}from\"../base\";var Inventory=/*#__PURE__*/function(_React$Component){_inherits(Inventory,_React$Component);var _super=_createSuper(Inventory);function Inventory(){var _this;_classCallCheck(this,Inventory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={uid:null,owner:null};_this.authHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(authData){var store;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return base.fetch(_this.props.storeId,{context:_assertThisInitialized(_this)});case 2:store=_context.sent;if(store.owner){_context.next=6;break;}_context.next=6;return base.post(\"\".concat(_this.props.storeId,\"/owner\"),{data:authData.user.uid});case 6:// 3. Set the state of the inventory component to reflect the current user\n_this.setState({uid:authData.user.uid,owner:store.owner||authData.user.uid});console.log(authData);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.authenticate=function(provider){var authProvider=new firebase.auth[\"\".concat(provider,\"AuthProvider\")]();firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);};_this.logout=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Logging out!');_context2.next=3;return firebase.auth().signOut();case 3:_this.setState({uid:null});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _this;}_createClass(Inventory,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;firebase.auth().onAuthStateChanged(function(user){if(user){_this2.authHandler({user});}});}},{key:\"render\",value:function render(){var _this3=this;var logout=/*#__PURE__*/React.createElement(\"button\",{onClick:this.logout},\"Log Out!\");// 1. Check if they are logged in\nif(!this.state.uid){return/*#__PURE__*/React.createElement(Login,{authenticate:this.authenticate});}// 2. check if the person logged in is are not current owner of this store.\nif(this.state.uid!==this.state.owner){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Sorry you are not the owner! \"),logout);}// 3. They must be the owner, just render the inventory editor\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"inventory\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Inventory!\"),logout,Object.keys(this.props.fishes).map(function(key){return/*#__PURE__*/React.createElement(EditFishForm,{key:key,index:key,fish:_this3.props.fishes[key],updateFish:_this3.props.updateFish,deleteFish:_this3.props.deleteFish});}),/*#__PURE__*/React.createElement(AddFishForm,{addFish:this.props.addFish}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.loadSampleFishes},\"Load Sample Fishes\"));}}]);return Inventory;}(React.Component);export default Inventory;","map":{"version":3,"sources":["/Users/sashavin/DeveloperTools/Visual Studio Code/react/catch-of-the-day/src/components/Inventory.js"],"names":["React","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","post","data","user","setState","console","log","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component"],"mappings":"szCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,IAAP,EAAeC,WAAf,KAAkC,SAAlC,C,GAEMC,CAAAA,S,mVAQNC,K,CAAQ,CACNC,GAAG,CAAE,IADC,CAENC,KAAK,CAAE,IAFD,C,OAaRC,W,0FAAc,iBAAOC,QAAP,kJAEQP,CAAAA,IAAI,CAACQ,KAAL,CAAW,MAAKC,KAAL,CAAWC,OAAtB,CAA+B,CAAEC,OAAO,8BAAT,CAA/B,CAFR,QAENC,KAFM,kBAIPA,KAAK,CAACP,KAJC,+CAMJL,CAAAA,IAAI,CAACa,IAAL,WAAa,MAAKJ,KAAL,CAAWC,OAAxB,WAAyC,CAC7CI,IAAI,CAAEP,QAAQ,CAACQ,IAAT,CAAcX,GADyB,CAAzC,CANI,QAUZ;AACA,MAAKY,QAAL,CAAc,CACZZ,GAAG,CAAEG,QAAQ,CAACQ,IAAT,CAAcX,GADP,CAEZC,KAAK,CAAEO,KAAK,CAACP,KAAN,EAAeE,QAAQ,CAACQ,IAAT,CAAcX,GAFxB,CAAd,EAIAa,OAAO,CAACC,GAAR,CAAYX,QAAZ,EAfY,sD,qEAkBdY,Y,CAAe,SAAAC,QAAQ,CAAI,CACzB,GAAMC,CAAAA,YAAY,CAAG,GAAIzB,CAAAA,QAAQ,CAAC0B,IAAT,WAAiBF,QAAjB,iBAAJ,EAArB,CACAnB,WAAW,CAACqB,IAAZ,GAAmBC,eAAnB,CAAmCF,YAAnC,EAAiDG,IAAjD,CAAsD,MAAKlB,WAA3D,EACD,C,OAEDmB,M,sEAAS,wIACPR,OAAO,CAACC,GAAR,CAAY,cAAZ,EADO,uBAEDtB,CAAAA,QAAQ,CAAC0B,IAAT,GAAgBI,OAAhB,EAFC,QAGP,MAAKV,QAAL,CAAc,CAAEZ,GAAG,CAAE,IAAP,CAAd,EAHO,wD,oGA/BW,iBAClBR,QAAQ,CAAC0B,IAAT,GAAgBK,kBAAhB,CAAmC,SAAAZ,IAAI,CAAI,CACzC,GAAGA,IAAH,CAAS,CACP,MAAI,CAACT,WAAL,CAAiB,CAACS,IAAD,CAAjB,EACD,CACF,CAJD,EAKD,C,uCA+BU,iBACP,GAAMU,CAAAA,MAAM,cAAG,8BAAQ,OAAO,CAAE,KAAKA,MAAtB,aAAf,CAEA;AACA,GAAI,CAAC,KAAKtB,KAAL,CAAWC,GAAhB,CAAoB,CAClB,mBAAO,oBAAC,KAAD,EAAO,YAAY,CAAE,KAAKe,YAA1B,EAAP,CACD,CAED;AACA,GAAI,KAAKhB,KAAL,CAAWC,GAAX,GAAmB,KAAKD,KAAL,CAAWE,KAAlC,CAAyC,CACvC,mBACA,4CACE,6DADF,CAEGoB,MAFH,CADA,CAMD,CAED;AAEA,mBACG,2BAAK,SAAS,CAAC,WAAf,eACG,2CADH,CAEIA,MAFJ,CAGIG,MAAM,CAACC,IAAP,CAAY,KAAKpB,KAAL,CAAWqB,MAAvB,EAA+BC,GAA/B,CAAmC,SAAAC,GAAG,qBACrC,oBAAC,YAAD,EACE,GAAG,CAAEA,GADP,CAEE,KAAK,CAAEA,GAFT,CAGE,IAAI,CAAE,MAAI,CAACvB,KAAL,CAAWqB,MAAX,CAAkBE,GAAlB,CAHR,CAIE,UAAU,CAAE,MAAI,CAACvB,KAAL,CAAWwB,UAJzB,CAKE,UAAU,CAAE,MAAI,CAACxB,KAAL,CAAWyB,UALzB,EADqC,EAAtC,CAHJ,cAYG,oBAAC,WAAD,EAAa,OAAO,CAAE,KAAKzB,KAAL,CAAW0B,OAAjC,EAZH,cAaG,8BAAQ,OAAO,CAAE,KAAK1B,KAAL,CAAW2B,gBAA5B,uBAbH,CADH,CAiBD,C,uBAvFqBzC,KAAK,CAAC0C,S,EA0F9B,cAAenC,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\n\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    loadSampleFishes: PropTypes.func.isRequired,\n  };\n\nstate = {\n  uid: null,\n  owner: null\n};\n\ncomponentDidMount() {\n  firebase.auth().onAuthStateChanged(user => {\n    if(user) {\n      this.authHandler({user});\n    }\n  });\n};\n\nauthHandler = async (authData) => {\n  // 1. Look up the current store in the firebase database\n  const store = await base.fetch(this.props.storeId, { context: this });\n  // 2. Claim it if there is no owner\n  if (!store.owner) {\n    // save it as our own\n    await base.post(`${this.props.storeId}/owner`, {\n      data: authData.user.uid\n    });\n  }\n  // 3. Set the state of the inventory component to reflect the current user\n  this.setState({\n    uid: authData.user.uid,\n    owner: store.owner || authData.user.uid\n  });\n  console.log(authData);\n};\n\nauthenticate = provider => {\n  const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n  firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n};\n\nlogout = async () => {\n  console.log('Logging out!');\n  await firebase.auth().signOut();\n  this.setState({ uid: null });\n}\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n\n    // 1. Check if they are logged in\n    if (!this.state.uid){\n      return <Login authenticate={this.authenticate}/>;\n    }\n\n    // 2. check if the person logged in is are not current owner of this store.\n    if (this.state.uid !== this.state.owner) {\n      return(\n      <div>\n        <p>Sorry you are not the owner! </p>\n        {logout}\n      </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory editor\n\n    return(\n       <div className=\"inventory\">\n          <h2>Inventory!</h2>\n          {logout}\n          {Object.keys(this.props.fishes).map(key => ( \n            <EditFishForm \n              key={key} \n              index={key}\n              fish={this.props.fishes[key]} \n              updateFish={this.props.updateFish}\n              deleteFish={this.props.deleteFish}\n            />\n          ))}\n          <AddFishForm addFish={this.props.addFish} />\n          <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}